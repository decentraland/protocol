syntax = "proto3";

package decentraland.sdk.components;

import "decentraland/common/vectors.proto";
import "decentraland/sdk/components/common/id.proto";

option (common.ecs_component_id) = 1067;

// The Raycast component allows scenes to request raycasting from the game engine. The results will
// be available in a RaycastResult component set later on the same Entity.

// RaycastQueryType indicates whether the ray should stop on the first collition, or continue.
enum RaycastQueryType {
  RQT_HIT_FIRST = 0;
  RQT_QUERY_ALL = 1;
}

message PBRaycast {
  decentraland.common.Vector3 origin = 2;    // the starting point of the ray in 3D space
  decentraland.common.Vector3 direction = 3; // the direction of the ray in 3D space
  float max_distance = 4;                    // the maximum length of the ray
  RaycastQueryType query_type = 5;           // the RaycastQueryType behavior (see above)
}
