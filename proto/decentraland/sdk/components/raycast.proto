syntax = "proto3";

package decentraland.sdk.components;

import "decentraland/common/vectors.proto";
import "decentraland/sdk/components/common/id.proto";

option (common.ecs_component_id) = 1067;

// The PBRaycast component and PBRaycastResult are defined in https://adr.decentraland.org/adr/ADR-200
//
// The Raycast component allows scenes to request raycasting from the game engine. The results will
// be available in a RaycastResult component set later on the same Entity.
message PBRaycast {
  // Correlation ID, defined by the scene and used internally by the scene
  optional uint32 timestamp = 1;

  // How much to offset the starting point of the ray, relative to the entity's transform.
  // Defaults to vec3(0,0,0)
  optional decentraland.common.Vector3 origin_offset = 2;

  oneof direction {
    // The direction of the ray in local coordinates (relative to the origin point)
    decentraland.common.Vector3 local_direction = 6;

    // The direction of the ray in global coordinates (relative to origin)
    decentraland.common.Vector3 global_direction = 3;

    // Target coordinates of the raycast, in global coordinates
    decentraland.common.Vector3 global_target = 7;

    // Will point to the final world position of another entity
    uint32 target_entity = 10;
  }

  // Maximum length of the ray in virtual meters (global space)
  float max_distance = 4;

  // the RaycastQueryType behavior
  RaycastQueryType query_type = 5;

  // Indicates the renderer to perform the raycast on every scene tick (ADR-148),
  // otherwise it will be performed only once, defaults to false
  optional bool continuous = 8;

  // Collision mask, by default CL_POINTER | CL_PHYSICS
  optional uint32 collision_mask = 9;
}

// RaycastQueryType indicates whether the ray should stop on the first collition, or continue.
enum RaycastQueryType {
  // Pick the first (not necessarily the closest) hit within the range
  RQT_HIT_FIRST = 0;
  // Pick all hits within the range
  RQT_QUERY_ALL = 1;
  // Do not perform the raycast, only set the raycast result with empty hits
  RQT_NONE = 2;
}
