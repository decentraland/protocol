syntax = "proto3";
package decentraland.sdk.components;

import "decentraland/sdk/components/common/id.proto";
option (common.ecs_component_id) = 1042;

// The Animator component is a container for multiple potential animations an Entity can display,
// separately or at the same time. It can be used to start, stop or blend animations; as well as
// to inspect their playback state.
//
// Animations have a `weight` property, which determines how pronounced the animation will be. This
// can be adjusted to blend animations together, or gracefully transition from one to the next.
message PBAnimator {
  repeated PBAnimationState states = 1; // a collection of animations and their current state
}

// (*) initial state means what frame is set when the state is reset:
// - if `speed` >= 0 the frame set is the first one
// - if `speed` < 0 the frame set is the last one
// (**) repeating means going back to the initial state at the moment the given animation is finished and keeps playing

// AnimationState indicates the status and configuration of one available animation.
message PBAnimationState {
  reserved 1;                     // deprecated `name` prop
  string clip = 2;                // the animation path in the `files` array of the scene manifest
  optional bool playing = 3;      // whether this animation is currently playing
  optional float weight = 4;      // @experimental the "weight" of this animation (see below, default: 1.0)
  optional float speed = 5;       // the playback speed (default: 1.0)
  optional bool loop = 6;         // whether the animation repeats (**) until is manually stopped (default: true)
  optional bool should_reset = 7; // whether the animation is restored to the initial state (*) when it changes from stopped to playing (default: false)
}
