syntax = "proto3";

import "decentraland/common/vectors.proto";

package decentraland.kernel.comms.v3;

message IslandChangedMessage {
  string island_id = 1;
  string conn_str = 2;
  optional string from_island_id = 3;
  map<string, decentraland.common.Position> peers = 4;
}

message LeftIslandMessage {
  string island_id = 1;
  string peer_id = 2;
}

message JoinIslandMessage {
  string island_id = 1;
  string peer_id = 2;
}

message IslandData {
  string id = 1;
  repeated string peers = 2;
  uint32 max_peers = 3;
  decentraland.common.Position center = 4;
  double radius = 5;
}

message IslandStatusMessage {
  repeated IslandData data = 1;
}

message Heartbeat {
  decentraland.common.Position position = 1;
  optional string desired_room = 2;
}

message ServerPacket {
  oneof message {
    IslandChangedMessage island_changed = 1;
    LeftIslandMessage  left_island = 2;
    JoinIslandMessage join_island = 3;
  }
}

message ClientPacket {
  oneof message {
    Heartbeat heartbeat = 1;
  }
}
