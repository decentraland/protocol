syntax = "proto3";

package decentraland.kernel.comms.v1;

enum MessageType {
  MT_UNKNOWN_MESSAGE_TYPE = 0;
  MT_WELCOME = 1;
  MT_CONNECT = 2;
  MT_WEBRTC_OFFER = 3;
  MT_WEBRTC_ANSWER = 4;
  MT_WEBRTC_ICE_CANDIDATE = 5;
  MT_PING = 6;
  MT_SUBSCRIPTION = 7;
  MT_AUTH = 8;

  MT_TOPIC = 9;
  MT_TOPIC_FW = 10;

  MT_TOPIC_IDENTITY = 11;
  MT_TOPIC_IDENTITY_FW = 12;
}

enum Role {
  R_UNKNOWN_ROLE = 0;
  R_CLIENT = 1;
  R_COMMUNICATION_SERVER = 2;
}

enum Format {
  F_UNKNOWN_FORMAT = 0;
  F_PLAIN = 1;
  F_GZIP = 2;
}

// NOTE: coordination messsages

message CoordinatorMessage {
  MessageType type = 1;
}

message WelcomeMessage {
  MessageType type = 1;
  uint64 alias = 2;
  repeated uint64 available_servers = 3;
}

message ConnectMessage {
  MessageType type = 1;
  uint64 from_alias = 2;
  uint64 to_alias = 3;
}

message WebRtcMessage {
  MessageType type = 1;
  uint64 from_alias = 2;
  uint64 to_alias = 3;
  bytes data = 4;
}

// NOTE: comm server messsages

message MessageHeader {
  MessageType type = 1;
}

message PingMessage {
  MessageType type = 1;
  double time = 2;
}

// NOTE: topics is a space separated string in the format specified by Format
message SubscriptionMessage {
  MessageType type = 1;
  Format format = 2;
  bytes topics = 3;
}

// NOTE: comm server messsages

message AuthMessage {
  MessageType type = 1;
  Role role = 2;
  bytes body = 3;
}

message TopicMessage {
  MessageType type = 1;
  uint64 from_alias = 2;
  string topic = 3;
  bytes body = 4;
}

message TopicFWMessage {
  MessageType type = 1;
  uint64 from_alias = 2;
  bytes body = 3;
}

message TopicIdentityMessage {
  MessageType type = 1;
  uint64 from_alias = 2;
  string topic = 3;
  bytes identity = 4;
  Role role = 5;
  bytes body = 6;
}

message TopicIdentityFWMessage {
  MessageType type = 1;
  uint64 from_alias = 2;
  bytes identity = 3;
  Role role = 4;
  bytes body = 5;
}
