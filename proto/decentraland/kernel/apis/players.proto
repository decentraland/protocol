syntax = "proto3";
package decentraland.kernel.apis;

import "decentraland/common/sdk/user_data.proto";

message Player {
    string user_id = 1;
}

message PlayersGetUserDataResponse {
    optional decentraland.common.sdk.UserData data = 1;
}

message PlayerListResponse {
    repeated Player players = 1;
}

message GetPlayerDataRequest {
    string user_id = 1;
}

message GetPlayersInSceneRequest {}
message GetConnectedPlayersRequest {}

service PlayersService {
    // Returns data about a specific player, by id
    // NOTE: To be deprecated after implementing foreign-entities and once the avatar scene uses SDK7
    rpc GetPlayerData(GetPlayerDataRequest) returns (PlayersGetUserDataResponse) {}
    // Returns a list of all the ids of players who are currently standing within the parcels of the scene
    // NOTE: To be deprecated after implementing foreign-entities and once the avatar scene uses SDK7
    rpc GetPlayersInScene(GetPlayersInSceneRequest) returns (PlayerListResponse) {}
    // Returns a list of all the ids of players who are currently connected to the same server and grouped together
    // NOTE: To be deprecated after implementing foreign-entities and once the avatar scene uses SDK7
    rpc GetConnectedPlayers(GetConnectedPlayersRequest)  returns (PlayerListResponse) {}
}
