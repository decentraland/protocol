syntax = "proto3";
package decentraland.kernel.apis;

import "decentraland/common/content_mapping.proto";

// This API will contain all the information related to the world runtime.
// Things related to the user, players or the scene itself has they own api, and
// won't live here. (UserIdentity, Players, ParcelIdentity)

message RealmInfo {
  string base_url = 1;
  string realm_name = 2;
  int32 network_id = 3;
  string comms_adapter = 4;
  bool is_preview = 5;
}

message GetRealmResponse {
  optional RealmInfo realm_info = 1;
}

message GetWorldTimeResponse {
  int32 seconds = 1;
}

message GetRealmRequest {}
message GetWorldTimeRequest {}

message ReadFileRequest {
  // name of the deployed file
  string file_name = 1;
}
message ReadFileResponse {
  // contents of the file
  bytes content = 1;
  // deployed hash/CID
  string hash = 2;
}

message CurrentSceneEntityRequest {}
message CurrentSceneEntityResponse {
  // this is either the entityId or the full URN of the scene that is running
  string urn = 1;
  // contents of the deployed entities
  repeated decentraland.common.ContentMapping content = 2;
  // JSON serialization of the entity.metadata field
  string metadata_json = 3;
  // baseUrl used to resolve all content files
  string base_url = 4;
}

service RuntimeService {
  // Provides information about the current realm
  rpc GetRealm(GetRealmRequest) returns (GetRealmResponse) {}
  // Provides information about the Decentraland Time, which is coordinated
  // across players.
  rpc GetWorldTime(GetWorldTimeRequest) returns (GetWorldTimeResponse) {}
  // Returns the file content of a deployed asset. If the file doesn't
  // exist or cannot be retrieved, the RPC call throws an error.
  // This method is called to load any assets deployed among the scene,
  // runtime may cache this response much more than the provided "fetch" function.
  rpc ReadFile(ReadFileRequest) returns (ReadFileResponse) {}
  // Returns information about the current scene. This is the replacement of GetBootstrapData
  rpc GetSceneInformation(CurrentSceneEntityRequest) returns (CurrentSceneEntityResponse) {}
}
