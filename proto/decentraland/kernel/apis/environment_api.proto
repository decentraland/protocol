syntax = "proto3";

package decentraland.kernel.apis;

import "decentraland/common/content_mapping.proto";

message MinimalRunnableEntity {
  repeated decentraland.common.ContentMapping content = 1;
  string metadata_json = 2;
}

message BootstrapDataResponse {
  string id = 1;
  string base_url = 4;
  MinimalRunnableEntity entity = 2;
  bool use_f_p_s_throttling = 5;
}

message PreviewModeResponse {
  bool is_preview = 1;
}

message AreUnsafeRequestAllowedResponse {
  bool status = 1;
}

message GetPlatformResponse {
  string platform = 1;
}

message EnvironmentRealm {
  string domain = 1;
  string layer = 2;
  string room = 3;
  string server_name = 4;
  string display_name = 5;
  string protocol = 6;
}

message GetCurrentRealmResponse {
  optional EnvironmentRealm current_realm = 1;
}

message GetExplorerConfigurationResponse {
  string client_uri = 1;
  map<string, string> configurations = 2;
}

message GetDecentralandTimeResponse {
  int32 seconds = 1;
}

message GetBootstrapDataRequest {}
message IsPreviewModeRequest {}
message GetPlatformRequest {}
message AreUnsafeRequestAllowedRequest {}
message GetCurrentRealmRequest {}
message GetExplorerConfigurationRequest {}
message GetDecentralandTimeRequest {}

service EnvironmentApiService {
  // @deprecated, only available for SDK6 compatibility. Use runtime_api instead
  rpc GetBootstrapData(GetBootstrapDataRequest) returns (BootstrapDataResponse) {}
  // @deprecated, only available for SDK6 compatibility. Needs migration
  rpc IsPreviewMode(IsPreviewModeRequest) returns (PreviewModeResponse) {}
  // @deprecated, only available for SDK6 compatibility
  rpc GetPlatform(GetPlatformRequest) returns (GetPlatformResponse) {}
  // @deprecated, only available for SDK6 compatibility
  rpc AreUnsafeRequestAllowed(AreUnsafeRequestAllowedRequest) returns (AreUnsafeRequestAllowedResponse) {}
  // @deprecated, use GetCurrentRealm from runtime_api instead
  rpc GetCurrentRealm(GetCurrentRealmRequest) returns (GetCurrentRealmResponse) {}
  // @deprecated, only available for SDK6 compatibility
  rpc GetExplorerConfiguration(GetExplorerConfigurationRequest) returns (GetExplorerConfigurationResponse) {}
  // @deprecated, use GetTime from runtime_api instead
  rpc GetDecentralandTime(GetDecentralandTimeRequest) returns (GetDecentralandTimeResponse) {}
}
