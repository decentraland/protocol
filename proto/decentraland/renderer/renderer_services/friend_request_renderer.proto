syntax = "proto3";

package decentraland.renderer.renderer_services;

message RendererFriendRequestInfo {
    string friend_request_id = 1;
    uint64 timestamp = 2;
    string from = 3;
    string to = 4;
    optional string message_body = 5;
}

message RendererApproveFriendRequestPayload {
    string user_id = 1;
}

message RendererApproveFriendRequestReply {}

message RendererRejectFriendRequestPayload {
    string user_id = 1;
}

message RendererRejectFriendRequestReply {}

message RendererCancelFriendRequestPayload {
    string user_id = 1;
}

message RendererCancelFriendRequestReply {}

message RendererReceiveFriendRequestPayload {
    RendererFriendRequestInfo friend_request = 1;
}

message RendererReceiveFriendRequestReply {}

service FriendRequestRendererService {
    rpc ApproveFriendRequest(RendererApproveFriendRequestPayload) returns (RendererApproveFriendRequestReply) {}
    rpc RejectFriendRequest(RendererRejectFriendRequestPayload) returns (RendererRejectFriendRequestReply) {}
    rpc CancelFriendRequest(RendererCancelFriendRequestPayload) returns (RendererCancelFriendRequestReply) {}
    rpc ReceiveFriendRequest(RendererReceiveFriendRequestPayload) returns (RendererReceiveFriendRequestReply) {}
}
