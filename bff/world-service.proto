syntax = "proto3";

import "google/protobuf/empty.proto";
import "common/Entity.proto";
import "common/Vectors.proto";
import "google/api/annotations.proto";

package decentraland.bff;

message PointOfInterest {
  string location = 1;
}

message PoisResponse {
  repeated PointOfInterest pois = 1;
}

message RequestEntities {
  repeated string pointers = 1;
}

message EntitiesResponse {
  repeated decentraland.common.Entity entities = 1;
}

message HotScenesResponse {
  repeated HotScene hot_scenes = 1;
}

message HotScene {
  string name = 1;
  string thumbnail = 2;
  uint32 user_count = 3;
  repeated HotSceneRealm realms = 4;
  string base_parcel = 5;
  string creator = 6;
  string description = 7;
}

message HotSceneRealm {
  string realm = 1;
  uint32 user_count = 2;
}

message ExploreRealmsResponse {
  repeated RealmStatsResponse realms = 1;
}

message RealmStatsResponse {
  string name = 1;
  string base_url = 2;
  uint32 user_count = 3;
}

service WorldManagementService {
  rpc GetEntities(RequestEntities) returns (EntitiesResponse) {
    option (google.api.http) = { post: "/world/entities" };
  }
  rpc GetPois(google.protobuf.Empty) returns (PoisResponse) {
    option (google.api.http) = { get: "/world/pois" };
  }
  rpc GetHotScenes(google.protobuf.Empty) returns (HotScenesResponse) {
    option (google.api.http) = { get: "/explore/hot-scenes" };
  }
  rpc GetRealms(google.protobuf.Empty) returns (ExploreRealmsResponse) {
    option (google.api.http) = { get: "/explore/realms" };
  }
}
